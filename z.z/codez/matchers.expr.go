//go:build !genz

// Code generated by genz codez-matchers. DO NOT EDIT.

package codez

import (
	ast "go/ast"
	token "go/token"
)

// ArrayType
type zArrayTypeMatcher struct {
	_ *ast.ArrayType

	Lbrack token.Pos
	Len    ExprMatcher
	Elt    ExprMatcher
}

// BadExpr
type zBadExprMatcher struct {
	_ *ast.BadExpr

	From token.Pos
	To   token.Pos
}

// BasicLit
type zBasicLitMatcher struct {
	_ *ast.BasicLit

	ValuePos token.Pos
	Kind     token.Token
	Value    StringMatcher
}

// BinaryExpr
type zBinaryExprMatcher struct {
	_ *ast.BinaryExpr

	X     ExprMatcher
	OpPos token.Pos
	Op    token.Token
	Y     ExprMatcher
}

// CallExpr
type zCallExprMatcher struct {
	_ *ast.CallExpr

	Fun      ExprMatcher
	Lparen   token.Pos
	Args     ExprListMatcher
	Ellipsis token.Pos
	Rparen   token.Pos
}

// ChanType
type zChanTypeMatcher struct {
	_ *ast.ChanType

	Begin token.Pos
	Arrow token.Pos
	Dir   ChanDirMatcher
	Value ExprMatcher
}

// CompositeLit
type zCompositeLitMatcher struct {
	_ *ast.CompositeLit

	Type       ExprMatcher
	Lbrace     token.Pos
	Elts       ExprListMatcher
	Rbrace     token.Pos
	Incomplete BoolMatcher
}

// Ellipsis
type zEllipsisMatcher struct {
	_ *ast.Ellipsis

	Ellipsis token.Pos
	Elt      ExprMatcher
}

// FuncLit
type zFuncLitMatcher struct {
	_ *ast.FuncLit

	Type FuncTypeMatcher
	Body BlockStmtMatcher
}

// FuncType
type zFuncTypeMatcher struct {
	_ *ast.FuncType

	Func       token.Pos
	TypeParams FieldListMatcher
	Params     FieldListMatcher
	Results    FieldListMatcher
}

// Ident
type zIdentMatcher struct {
	_ *ast.Ident

	NamePos token.Pos
	Name    StringMatcher
	Obj     ObjectMatcher
}

// IndexExpr
type zIndexExprMatcher struct {
	_ *ast.IndexExpr

	X      ExprMatcher
	Lbrack token.Pos
	Index  ExprMatcher
	Rbrack token.Pos
}

// IndexListExpr
type zIndexListExprMatcher struct {
	_ *ast.IndexListExpr

	X       ExprMatcher
	Lbrack  token.Pos
	Indices ExprListMatcher
	Rbrack  token.Pos
}

// InterfaceType
type zInterfaceTypeMatcher struct {
	_ *ast.InterfaceType

	Interface  token.Pos
	Methods    FieldListMatcher
	Incomplete BoolMatcher
}

// KeyValueExpr
type zKeyValueExprMatcher struct {
	_ *ast.KeyValueExpr

	Key   ExprMatcher
	Colon token.Pos
	Value ExprMatcher
}

// MapType
type zMapTypeMatcher struct {
	_ *ast.MapType

	Map   token.Pos
	Key   ExprMatcher
	Value ExprMatcher
}

// ParenExpr
type zParenExprMatcher struct {
	_ *ast.ParenExpr

	Lparen token.Pos
	X      ExprMatcher
	Rparen token.Pos
}

// SelectorExpr
type zSelectorExprMatcher struct {
	_ *ast.SelectorExpr

	X   ExprMatcher
	Sel IdentMatcher
}

// SliceExpr
type zSliceExprMatcher struct {
	_ *ast.SliceExpr

	X      ExprMatcher
	Lbrack token.Pos
	Low    ExprMatcher
	High   ExprMatcher
	Max    ExprMatcher
	Slice3 BoolMatcher
	Rbrack token.Pos
}

// StarExpr
type zStarExprMatcher struct {
	_ *ast.StarExpr

	Star token.Pos
	X    ExprMatcher
}

// StructType
type zStructTypeMatcher struct {
	_ *ast.StructType

	Struct     token.Pos
	Fields     FieldListMatcher
	Incomplete BoolMatcher
}

// TypeAssertExpr
type zTypeAssertExprMatcher struct {
	_ *ast.TypeAssertExpr

	X      ExprMatcher
	Lparen token.Pos
	Type   ExprMatcher
	Rparen token.Pos
}

// UnaryExpr
type zUnaryExprMatcher struct {
	_ *ast.UnaryExpr

	OpPos token.Pos
	Op    token.Token
	X     ExprMatcher
}
